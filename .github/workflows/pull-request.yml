# @copyright 2024 Monotype Imaging Inc.
#  
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  
#     http://www.apache.org/licenses/LICENSE-2.0
#  
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @file pull-request.yml
#
# @brief GitHub Actions workflow for Pull Requests
#
on: 
  pull_request:
    branches:
      - "dev"
      - "main"
    paths-ignore:
      - "./.devtools"
      - "**/*.md"
      - "./.vscode"
      - "./Docs/"
      - ".gitignore"
      - ".rusty-hook.toml"

jobs:
  # Check all modifies files to see if any need updates to their copyright
  # comments (or, in the case of .rs files, are missing a copyright comment).
  # This outputs a "copyright_commit_added" boolean which signals that a new
  # copyright commit has been made - if this is true, we should avoid running
  # any other jobs; as they will be run again with the new copyright commit.
  copyright-update:
    uses: ./.github/workflows/.copyright-update.yml
    secrets: 
      GITHUB_USER_NAME: ${{ secrets.PITEST_USER }}
      GITHUB_USER_EMAIL: ${{ secrets.PITEST_EMAIL }}
      GITHUB_USER_TOKEN: ${{ secrets.PITEST_TOKEN }}

  audits:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    uses: ./.github/workflows/.audits.yml
    with:
      check_unused_deps: true

  builds:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # PRs should check the default toolchain, stable, and nightly
        rust_version: [1.75.0, stable, nightly]
    uses: ./.github/workflows/.builds.yml
    with:
      os: ${{ matrix.os }}
      rust_version: ${{ matrix.rust_version }}

  code-smells:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    uses: ./.github/workflows/.code-smells.yml

  coverage:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    uses: ./.github/workflows/.tests.yml
    with:
      rust_version: stable 
      os: ubuntu-latest 
      report_coverage: true
    secrets: 
      USER_TOKEN: ${{ secrets.PITEST_TOKEN }}

  docs:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    uses: ./.github/workflows/.docs.yml

  # We only check spelling on Pull Requests, as once it is merged in the
  # spellings shouldn't change, right??
  spellcheck:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    name: Spellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Cspell
        uses: streetsidesoftware/cspell-action@v5
        with:
          files: '**/*.{md,rs,ps1,yml}'
          incremental_files_only: true
          config: './.cspell.json'
          verbose: true
          check_dot_files: true

  # Don't run coverage for nightly, as it is not stable and we use it only
  # to get ahead of any breaking changes.
  tests:
    needs:
      copyright-update
    if: needs.copyright-update.outputs.copyright_commit_added == 'false'
    uses: ./.github/workflows/.tests.yml
    with:
      rust_version: nightly
      os: ubuntu-latest
      report_coverage: false 